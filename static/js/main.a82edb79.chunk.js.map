{"version":3,"sources":["components/Header.js","components/Movie.js","components/Movies.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","defaultProps","Movie","movie","imageUrl","poster_path","className","alt","src","popularity","vote_average","vote_count","overview","Movies","movies","map","id","Button","text","onClick","page","App","useState","error","setError","isLoading","setIsLoading","setMovies","key","setKey","getData","event","a","preventDefault","urls","num","index","moviesArray","Promise","all","url","fetch","method","Headers","then","res","data","ok","json","console","log","status","reject","responses","results","sort","b","onSubmit","htmlFor","required","type","placeholder","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a82edb79.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\n\nconst Header = ( { title }) => {\n\n    return (\n        <div>\n           <h1>{title}</h1>\n        </div>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Default title',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","const Movie = ({ movie }) => {\n    const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n    return (\n        <div className=\"movie\">\n            <img className=\"movie__image\" alt={movie.title} src={imageUrl}></img>\n            <div className=\"movie__info\">\n\n                <span className=\"movie__subject--header\">{movie.title}</span>\n\n                <div className=\"movie__subject\">\n                    <span className=\"movie__subject--label\">Populär:</span>\n                    <span className=\"movie__subject--value\">{movie.popularity}</span>\n                </div>\n\n                <div className=\"movie__subject\">\n                    <span className=\"movie__subject--label\">Betyg:</span>\n                    <span className=\"movie__subject--value\">{movie.vote_average}</span>\n                </div>\n\n                <div className=\"movie__subject\">\n                    <span className=\"movie__subject--label\">Röster:</span>\n                    <span className=\"movie__subject--value\">{movie.vote_count}</span>\n                </div>\n\n                <span className=\"movie__subject--overview\">{movie.overview}</span>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Movie\n","import Movie from './Movie'\n\nconst Movies = ({ movies }) => {\n\n    return (\n        <div className=\"movies\">\n        {movies.map((movie) => (\n        <Movie key={movie.id} movie={movie}/>\n        ))}\n        </div>\n    )\n}\n\n\nexport default Movies\n","import PropTypes from 'prop-types'\n\nconst Button = ({ text, onClick }) => {\n\n    return (\n        <button\n            onClick={onClick}\n            className=\"btn-load\">\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    text: 'Title'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func\n}\n\n\nexport default Button\n","import './App.css';\nimport { useState } from 'react'\nimport Header from './components/Header';\nimport Movies from './components/Movies';\nimport Button from './components/Button';\n\nconst page = [1,2,3,4,5]\n\nfunction App() {\n  const [error, setError] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [movies, setMovies] = useState([])\n  const [key, setKey] = useState(\"\");\n\n  const getData = async (event) => {\n    event.preventDefault();\n    \n    setIsLoading(true)\n    let urls = page.map(num => 'https://api.themoviedb.org/3/movie/popular?api_key='+key+'&language=en-US&page='+num)\n    let index = 0\n    let moviesArray = []\n\n    let responses = await Promise.all(\n      urls.map(url => fetch(url, {\n        method: 'GET',\n        Headers: { 'Content-Type': 'application/json;charset=utf-8'}\n      }))\n      ).then (async (res) => {\n        return Promise.all(\n          res.map(async (data) => {\n            if (data.ok) {\n              return await data.json()\n            } else {\n              setError(true)\n              console.log(data.status)\n              setIsLoading(false)\n              return Promise.reject(data)\n            }\n          })\n        )\n    })\n\n    if(!error) {\n      responses.map(page => {\n        return page.results.map(movie => {\n          moviesArray[index] = movie;\n          index++\n          return moviesArray\n        })\n      })\n\n      moviesArray.sort(function(a,b) {\n        return a.popularity < b.popularity ? 1: -1\n      })\n\n      setMovies(moviesArray);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Header title='100 mest populära filmer just nu' />\n      <form onSubmit={getData}>\n        <label htmlFor=\"inputKey\">Ange API key</label>\n        <input \n              id=\"inputKey\"\n              required\n              type=\"text\" \n              placeholder=\"Ange API key\"\n              value={key}\n              onChange={(e) => setKey(e.target.value)\n              }\n          />\n        <Button type=\"submit\" text={isLoading ? 'Laddar': 'Hämta filmer'}/>\n      </form>\n      {error ? <p>Oj något blev fel</p>: null}\n      <Movies movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}